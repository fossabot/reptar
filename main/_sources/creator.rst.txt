=======
Creator
=======

Reproducibility of computational chemistry research is the driving force of reptar.
Open data is a crucial for making this happen, but established solutions often cannot support evolving research interests.
In order to make this as easy as possible, reptar provides a :class:`~reptar.creator` class that handles turning calculations into reproducible data.
By providing a customizable parser framework, reptar will automatically take care of storing the essential information while leaving the option for the user to easily parse their own data.

Reptar supports the following packages and jobs with their respective tests.

.. table::
    :align: center

    ====================  ======================= ========================= ============= ============= ======================
    **Package**           **Single point energy** **Geometry optimization** **Frequency** **Gradients** **Molecular dynamics**
    --------------------  ----------------------- ------------------------- ------------- ------------- ----------------------
    ASE                                           X                                                     X                          
    ORCA                  X                                                               X                
    xTB                                           X                                                     X                                                          
    ====================  ======================= ========================= ============= ============= ======================


Group creation
==============

First, a :ref:`File<file>` object needs to be loaded into the creator.
Reptar provides two ways to do this: by initializing a :class:`~reptar.creator` object with a :ref:`File<file>` object, or by using the :meth:`~reptar.creator.load` method.

.. autoclass:: reptar.creator
    :noindex:

.. automethod:: reptar.creator.load
    :noindex:

.. note::

    This :ref:`File<file>` object is stored in the :attr:`~reptar.creator.rfile` attribute.

Reptar can then parse information and create a group by specifying the paths to the relevant output files.

.. automethod:: reptar.creator.from_calc
    :noindex:

Types of output files
---------------------

There are currently three supported types of output files used (that also depend on the package).

.. glossary::

    ``out_path``
        The default log file generated by the software package.

    ``geom_path``
        A file containing a single (usually the initial) geometry.

    ``traj_path``
        The trajectory specifying the structural evolution during a job (e.g., geometry optimization or MD simulation).

.. note::
    
    If both ``geom_path`` and ``traj_path`` are provided, the structure defined in ``geom_path`` is considered the first structure.

Additional data
===============

Other data cannot be easily parsed from output files.
We provide methods to easily add this information.

Component and entity ids
------------------------

TODO:

.. automethod:: reptar.creator.ids
    :noindex:

File definitions
----------------

TODO:

.. automethod:: reptar.creator.definitions
    :noindex:
